@model ExternalLoginsViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration configuration
@{
  ViewData["Title"] = "Manage your external logins";
  ViewData.AddActivePage(ManageNavPages.ExternalLogins);
}
@Html.Partial("_StatusMessage", Model.StatusMessage)
@if (Model.CurrentLogins?.Count > 0)
{
  <h4>Registered Logins</h4>
  <table class="table">
    <tbody>
      @foreach (var login in Model.CurrentLogins)
      {
        var icon = login.LoginProvider == "Facebook" ? "fa-facebook-square" : login.LoginProvider == "Google" ? "fa-google" : configuration[$"auth:oidc:{login.LoginProvider}:icon"];
        var color = login.LoginProvider == "Facebook" ? "#3B5998" : login.LoginProvider == "Google" ? "#EA4335" : configuration[$"auth:oidc:{login.LoginProvider}:iconColor"];

        <tr>
          <td><i class="fab fa-fw @icon" style="color: @color"></i> @login.LoginProvider</td>
          <td>
            @if (Model.ShowRemoveButton)
            {
              <form asp-action="RemoveLogin" method="post">
                <div>
                  <input asp-for="@login.LoginProvider" name="LoginProvider" type="hidden" />
                  <input asp-for="@login.ProviderKey" name="ProviderKey" type="hidden" />
                  <button type="submit" class="btn btn-default" title="Remove this @login.LoginProvider login from your account">Remove</button>
                </div>
              </form>
            }
            else
            {
              @: &nbsp;
            }
          </td>
        </tr>
      }
    </tbody>
  </table>
}
@if (Model.OtherLogins?.Count > 0)
{
  <h4>Add another service to log in.</h4>
  <hr />
  <form asp-action="LinkLogin" method="post" class="form-horizontal">
    <div id="socialLoginList">
      <p>
        @foreach (var provider in Model.OtherLogins)
        {
          @*<button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>*@
          var icon = provider.Name == "Facebook" ? "fa-facebook-square" : provider.Name == "Google" ? "fa-google" : configuration[$"auth:oidc:{provider.Name}:icon"];
          var color = provider.Name == "Facebook" ? "#3B5998" : provider.Name == "Google" ? "#EA4335" : configuration[$"auth:oidc:{provider.Name}:iconColor"];

          <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
            <i class="fab fa-fw @icon" style="color: @color"></i> @provider.DisplayName
          </button>
        }
      </p>
    </div>
  </form>
}
